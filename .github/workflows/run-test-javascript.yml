name: run-test-javascript

on:
  pull_request:
    branches: [main]
  # trigger deployment on every push to main branch
  push:
    branches: [main]
    paths:
      - '**'
      - ./github/workflows/run-test-javascript.yml
      - '!LICENSE'
      - '!CODE_OF_CONDUCT.md'
      - '!CHANGELOG.md'
      - '!docs/**'
      - '!.github/**'
      - '!.vscode/**'
  # trigger deployment manually
  workflow_dispatch:

jobs:
  run-test-javascript:
    runs-on: ${{ matrix.os }}
    name: Test Node.js ${{ matrix.node_version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node_version: ['18', '20', '22']
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all commits to get last updated time or other git log info
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          # choose node.js version to use
          node-version: ${{ matrix.node_version }}
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      # get cache from npm cache directory
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # install dependencies if the cache did not hit
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm i

      # run test
      - name: Test module script
        run: npm run test
