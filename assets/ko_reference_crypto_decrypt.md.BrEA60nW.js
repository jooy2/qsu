import{_ as d,C as e,c as n,o as p,j as t,G as s,ag as o,a as i}from"./chunks/framework.DWHySUGW.js";const v=JSON.parse('{"title":"decrypt","description":"","frontmatter":{},"headers":[],"relativePath":"ko/reference/crypto/decrypt.md","filePath":"ko/reference/crypto/decrypt.md","lastUpdated":1761108066000}'),c={name:"ko/reference/crypto/decrypt.md"},h={id:"decrypt",tabindex:"-1"};function k(g,a,b,u,y,m){const r=e("Lang"),l=e("NodeRequired");return p(),n("div",null,[t("h1",h,[a[0]||(a[0]=i("decrypt ",-1)),s(r,{js:""}),a[1]||(a[1]=i()),a[2]||(a[2]=t("a",{class:"header-anchor",href:"#decrypt","aria-label":'Permalink to "decrypt <Lang js />"'},"​",-1))]),s(l,{ko:""}),a[3]||(a[3]=o('<p>지정된 알고리즘(기본값: <code>aes-256-cbc</code>)을 사용하여 문자열과 비밀번호(비밀번호)를 해독합니다.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>str::string</code></li><li><code>secret::string</code></li><li><code>algorithm::string || &#39;aes-256-cbc&#39;</code></li></ul><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>string</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-XArM-" id="tab-tJ6VfUc" checked><label data-title="JavaScript" for="tab-tJ6VfUc">JavaScript</label><input type="radio" name="group-XArM-" id="tab-f2MiUPV"><label data-title="Dart" for="tab-f2MiUPV">Dart</label></div><div class="blocks"><div class="language-javascript vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;61ba43b65fc...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;secret-key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;61ba43b65fc...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;secret-key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></div></div>',7))])}const f=d(c,[["render",k]]);export{v as __pageData,f as default};
