import{_ as l,C as a,c as o,o as n,j as s,G as t,ag as d,a as i}from"./chunks/framework.DWHySUGW.js";const _=JSON.parse('{"title":"getFileHashFromPath","description":"","frontmatter":{},"headers":[],"relativePath":"reference/file/getFileHashFromPath.md","filePath":"en/reference/file/getFileHashFromPath.md","lastUpdated":1761108066000}'),p={name:"reference/file/getFileHashFromPath.md"},c={id:"getfilehashfrompath",tabindex:"-1"};function m(g,e,k,u,f,F){const r=a("Lang"),h=a("NodeRequired");return n(),o("div",null,[s("h1",c,[e[0]||(e[0]=i("getFileHashFromPath ",-1)),t(r,{js:""}),e[1]||(e[1]=i()),e[2]||(e[2]=s("a",{class:"header-anchor",href:"#getfilehashfrompath","aria-label":'Permalink to "getFileHashFromPath <Lang js />"'},"​",-1))]),t(h,{en:""}),e[3]||(e[3]=d('<p>Returns the file in the specified path as a value hashed by a specific algorithm. The default algorithm is <code>md5</code>. This method uses a <code>Promise</code> to return a valid hash value.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>filePath::string</code>: File path</li><li><code>algorithm::&#39;md5&#39;|&#39;sha1&#39;|&#39;sha256&#39;|&#39;sha512&#39;</code>: OpenSSL algorithm to be used for file hashing</li></ul><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>Promise::string</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFileHashFromPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/home/user/text.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sha1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;38851813f75627d581c593f3ccfb7061dd013fbd&#39;</span></span></code></pre></div>',7))])}const b=l(p,[["render",m]]);export{_ as __pageData,b as default};
