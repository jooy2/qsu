import{_ as o,C as a,c as d,o as h,j as t,G as s,ag as l,a as i}from"./chunks/framework.DWHySUGW.js";const v=JSON.parse('{"title":"getMachineId","description":"","frontmatter":{},"headers":[],"relativePath":"reference/os/getMachineId.md","filePath":"en/reference/os/getMachineId.md","lastUpdated":1761108066000}'),c={name:"reference/os/getMachineId.md"},p={id:"getmachineid",tabindex:"-1"};function m(u,e,g,k,f,b){const r=a("Lang"),n=a("NodeRequired");return h(),d("div",null,[t("h1",p,[e[0]||(e[0]=i("getMachineId ",-1)),s(r,{js:""}),e[1]||(e[1]=i()),e[2]||(e[2]=t("a",{class:"header-anchor",href:"#getmachineid","aria-label":'Permalink to "getMachineId <Lang js />"'},"​",-1))]),s(n,{en:""}),e[3]||(e[3]=l('<p>Gets the unique UUID of the current device. Throws an error if the value is not retrieved. Returns a <code>Promise</code> object, so use <code>await</code> or <code>.then()</code> to wait for the operation to complete and get the correct value.</p><p>The UUID may change when the system is reinstalled or as the virtual machine&#39;s environment changes. On some systems, this value can also be modified by the system administrator (but this is rarely utilized as the system may become unstable after modification).</p><p>This method returns the same value for every user on the system.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>No required parameters</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>string</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getMachineId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;a642d9e1-6063-4da7-8ea8-2298f989d01d&#39;</span></span></code></pre></div>',9))])}const y=o(c,[["render",m]]);export{v as __pageData,y as default};
