import{_ as r,C as e,c as h,o,j as i,G as s,ag as p,a as t}from"./chunks/framework.DWHySUGW.js";const y=JSON.parse('{"title":"isValidFileName","description":"","frontmatter":{},"headers":[],"relativePath":"ko/reference/file/isValidFileName.md","filePath":"ko/reference/file/isValidFileName.md","lastUpdated":1761108066000}'),d={name:"ko/reference/file/isValidFileName.md"},k={id:"isvalidfilename",tabindex:"-1"};function c(m,a,u,F,g,E){const l=e("Lang"),n=e("NodeRequired");return o(),h("div",null,[i("h1",k,[a[0]||(a[0]=t("isValidFileName ",-1)),s(l,{js:""}),a[1]||(a[1]=t()),a[2]||(a[2]=i("a",{class:"header-anchor",href:"#isvalidfilename","aria-label":'Permalink to "isValidFileName <Lang js />"'},"​",-1))]),s(n,{ko:""}),a[3]||(a[3]=p(`<p>전달된 경로 또는 파일 이름이 시스템에서 허용하는 문자열을 사용하는지 여부를 결정합니다(또한 유효한 파일 길이도 확인합니다). 이름을 사용할 수 없는 경우 false를 반환합니다.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>filePath::string</code>: File or directory path</li><li><code>unixType::boolean?</code>: Passes true if the file type is unix type.</li></ul><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>boolean</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValidFileName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Windows</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">System32*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValidFileName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/home/user/.bashrc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div>`,7))])}const _=r(d,[["render",c]]);export{y as __pageData,_ as default};
