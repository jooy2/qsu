import{_ as i,C as n,c as r,o as l,j as e,ag as d,a as s,G as o}from"./chunks/framework.DWHySUGW.js";const f=JSON.parse('{"title":"strBlindRandom","description":"","frontmatter":{},"headers":[],"relativePath":"reference/string/strBlindRandom.md","filePath":"en/reference/string/strBlindRandom.md","lastUpdated":1761108066000}'),p={name:"reference/string/strBlindRandom.md"},h={id:"strblindrandom",tabindex:"-1"};function c(k,a,m,u,g,E){const t=n("Lang");return l(),r("div",null,[e("h1",h,[a[0]||(a[0]=s("strBlindRandom ",-1)),o(t,{js:""}),a[1]||(a[1]=s()),a[2]||(a[2]=e("a",{class:"header-anchor",href:"#strblindrandom","aria-label":'Permalink to "strBlindRandom <Lang js />"'},"​",-1))]),a[3]||(a[3]=d('<p>Replace strings at random locations with a specified number of characters (default 1) with characters (default *).</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>str::string</code></li><li><code>blindLength::number</code></li><li><code>blindStr::string || &#39;*&#39;</code></li></ul><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>string</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strBlindRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;#el#o&#39;</span></span></code></pre></div>',7))])}const _=i(p,[["render",c]]);export{f as __pageData,_ as default};
