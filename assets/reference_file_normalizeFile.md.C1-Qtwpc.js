import{_ as r,C as a,c as o,o as h,j as i,G as s,ag as d,a as t}from"./chunks/framework.DWHySUGW.js";const _=JSON.parse('{"title":"normalizeFile","description":"","frontmatter":{},"headers":[],"relativePath":"reference/file/normalizeFile.md","filePath":"en/reference/file/normalizeFile.md","lastUpdated":1761108066000}'),p={name:"reference/file/normalizeFile.md"},k={id:"normalizefile",tabindex:"-1"};function c(m,e,F,E,u,g){const l=a("Lang"),n=a("NodeRequired");return h(),o("div",null,[i("h1",k,[e[0]||(e[0]=t("normalizeFile ",-1)),s(l,{js:""}),e[1]||(e[1]=t()),e[2]||(e[2]=i("a",{class:"header-anchor",href:"#normalizefile","aria-label":'Permalink to "normalizeFile <Lang js />"'},"​",-1))]),s(n,{en:""}),e[3]||(e[3]=d(`<p>Returns the file name within the path.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>filePath::string</code>: File or directory path</li><li><code>normalizationForm::&#39;NFC&#39;|&#39;NFD&#39;|&#39;NFKC&#39;|&#39;NFKD&#39;|undefined</code>: Normalization method (If value is <code>undefined</code>, <code>NFC</code> is used.)</li></ul><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>string</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">normalizeFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;안녕하세요Hello.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NFC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;안녕하세요Hello.txt&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">normalizeFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;안녕하세요Hello.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NFD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;안녕하세요Hello.txt&#39;</span></span></code></pre></div>`,7))])}const x=r(p,[["render",c]]);export{_ as __pageData,x as default};
