import{_ as r,C as a,c as h,o as p,j as i,ag as k,a as t,G as e}from"./chunks/framework.DWHySUGW.js";const b=JSON.parse('{"title":"truncateExpect","description":"","frontmatter":{},"headers":[],"relativePath":"reference/string/truncateExpect.md","filePath":"en/reference/string/truncateExpect.md","lastUpdated":1761115059000}'),d={name:"reference/string/truncateExpect.md"},E={id:"truncateexpect",tabindex:"-1"};function o(g,s,c,u,y,F){const n=a("Lang"),l=a("DartNamed");return p(),h("div",null,[i("h1",E,[s[0]||(s[0]=t("truncateExpect ",-1)),e(n,{dart:"",js:""}),s[1]||(s[1]=t()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#truncateexpect","aria-label":'Permalink to "truncateExpect <Lang dart js />"'},"​",-1))]),s[7]||(s[7]=i("p",null,[t("The string ignores truncation until the ending character ("),i("code",null,"endStringChar"),t("). If the expected length is reached, return the truncated string until after the ending character.")],-1)),s[8]||(s[8]=i("h2",{id:"parameters",tabindex:"-1"},[t("Parameters "),i("a",{class:"header-anchor",href:"#parameters","aria-label":'Permalink to "Parameters"'},"​")],-1)),i("ul",null,[s[5]||(s[5]=i("li",null,[i("code",null,"str::string")],-1)),s[6]||(s[6]=i("li",null,[i("code",null,"expectLength::number")],-1)),i("li",null,[s[3]||(s[3]=i("code",null,"endStringChar::string || '.'",-1)),s[4]||(s[4]=t()),e(l)])]),s[9]||(s[9]=k(`<h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>string</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-V7Idl" id="tab-BYsVEKL" checked><label data-title="JavaScript" for="tab-BYsVEKL">JavaScript</label><input type="radio" name="group-V7Idl" id="tab-2hGVSl7"><label data-title="Dart" for="tab-2hGVSl7">Dart</label></div><div class="blocks"><div class="language-javascript vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncateExpect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello. this is test string.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;hello. this is test string.&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncateExpect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello-this-is-test-string-bye&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;hello-this-is-&#39;</span></span></code></pre></div><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncateExpect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello. this is test string.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, endStringChar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;hello. this is test string.&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncateExpect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello-this-is-test-string-bye&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, endStringChar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;-&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;hello-this-is-&#39;</span></span></code></pre></div></div></div>`,4))])}const C=r(d,[["render",o]]);export{b as __pageData,C as default};
