import{_ as h,C as t,c as k,o as r,j as i,G as e,ag as d,a}from"./chunks/framework.DWHySUGW.js";const C=JSON.parse('{"title":"getFileExtension","description":"","frontmatter":{},"headers":[],"relativePath":"ko/reference/file/getFileExtension.md","filePath":"ko/reference/file/getFileExtension.md","lastUpdated":1761785793000}'),o={name:"ko/reference/file/getFileExtension.md"},g={id:"getfileextension",tabindex:"-1"};function E(F,s,y,u,m,c){const n=t("Lang"),l=t("NodeRequired"),p=t("DartNamed");return r(),k("div",null,[i("h1",g,[s[0]||(s[0]=a("getFileExtension ",-1)),e(n,{js:"",dart:""}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#getfileextension","aria-label":'Permalink to "getFileExtension <Lang js dart />"'},"​",-1))]),e(l,{ko:""}),s[7]||(s[7]=i("p",null,"지정된 파일 경로에서 파일 확장자를 반환합니다. 확장자가 없는 파일의 경우 빈 문자열 값이 반환됩니다.",-1)),s[8]||(s[8]=i("h2",{id:"parameters",tabindex:"-1"},[a("Parameters "),i("a",{class:"header-anchor",href:"#parameters","aria-label":'Permalink to "Parameters"'},"​")],-1)),i("ul",null,[s[6]||(s[6]=i("li",null,[i("code",null,"filePath::string"),a(": File or directory path")],-1)),i("li",null,[s[3]||(s[3]=i("code",null,"isWindows::boolean",-1)),s[4]||(s[4]=a()),e(p),s[5]||(s[5]=a(": Whether the target operating system to be checked is Windows",-1))])]),s[9]||(s[9]=d("",4))])}const b=h(o,[["render",E]]);export{C as __pageData,b as default};
