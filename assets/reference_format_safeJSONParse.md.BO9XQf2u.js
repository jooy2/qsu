import{_ as r,C as e,c as p,o as h,j as a,ag as k,a as i,G as t}from"./chunks/framework.DWHySUGW.js";const m=JSON.parse('{"title":"safeJSONParse","description":"","frontmatter":{},"headers":[],"relativePath":"reference/format/safeJSONParse.md","filePath":"en/reference/format/safeJSONParse.md","lastUpdated":1761907746000}'),d={name:"reference/format/safeJSONParse.md"},o={id:"safejsonparse",tabindex:"-1"};function E(g,s,u,c,y,f){const n=e("Lang"),l=e("DartNamed");return h(),p("div",null,[a("h1",o,[s[0]||(s[0]=i("safeJSONParse ",-1)),t(n,{dart:"",js:""}),s[1]||(s[1]=i()),s[2]||(s[2]=a("a",{class:"header-anchor",href:"#safejsonparse","aria-label":'Permalink to "safeJSONParse <Lang dart js />"'},"​",-1))]),s[6]||(s[6]=a("p",null,[i("Attempts to parse without returning an error, even if the argument value is of the wrong type or in "),a("code",null,"JSON"),i(" format. If parsing fails, it will be replaced with the object set in "),a("code",null,"fallback"),i(". The default value for "),a("code",null,"fallback"),i(" is an empty object.")],-1)),s[7]||(s[7]=a("h2",{id:"parameters",tabindex:"-1"},[i("Parameters "),a("a",{class:"header-anchor",href:"#parameters","aria-label":'Permalink to "Parameters"'},"​")],-1)),a("ul",null,[s[5]||(s[5]=a("li",null,[a("code",null,"jsonString::any")],-1)),a("li",null,[s[3]||(s[3]=a("code",null,"fallback::object",-1)),s[4]||(s[4]=i()),t(l)])]),s[8]||(s[8]=k(`<h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>object</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-4nTl1" id="tab-LsDdFQm" checked><label data-title="JavaScript" for="tab-LsDdFQm">JavaScript</label><input type="radio" name="group-4nTl1" id="tab-l3Hk_fG"><label data-title="Dart" for="tab-l3Hk_fG">Dart</label></div><div class="blocks"><div class="language-javascript vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> safeJSONParse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{&quot;a&quot;:1,&quot;b&quot;:2}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> safeJSONParse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns { a: 1, b: 2 }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns {}</span></span></code></pre></div><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> safeJSONParse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{&quot;a&quot;:1,&quot;b&quot;:2}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> safeJSONParse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns { a: 1, b: 2 }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns {}</span></span></code></pre></div></div></div>`,4))])}const F=r(d,[["render",E]]);export{m as __pageData,F as default};
