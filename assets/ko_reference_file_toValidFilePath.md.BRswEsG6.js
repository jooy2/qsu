import{_ as r,C as s,c as h,o,j as i,G as e,ag as d,a as t}from"./chunks/framework.DWHySUGW.js";const C=JSON.parse('{"title":"toValidFilePath","description":"","frontmatter":{},"headers":[],"relativePath":"ko/reference/file/toValidFilePath.md","filePath":"ko/reference/file/toValidFilePath.md","lastUpdated":1761108066000}'),p={name:"ko/reference/file/toValidFilePath.md"},k={id:"tovalidfilepath",tabindex:"-1"};function c(F,a,g,m,u,E){const l=s("Lang"),n=s("NodeRequired");return o(),h("div",null,[i("h1",k,[a[0]||(a[0]=t("toValidFilePath ",-1)),e(l,{js:""}),a[1]||(a[1]=t()),a[2]||(a[2]=i("a",{class:"header-anchor",href:"#tovalidfilepath","aria-label":'Permalink to "toValidFilePath <Lang js />"'},"​",-1))]),e(n,{ko:""}),a[3]||(a[3]=d(`<p>경로에 있는 유효하지 않거나 불필요한 문자를 제거합니다.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><ul><li><code>filePath::string</code></li><li><code>isWindows::boolean</code>: Whether the target operating system to be checked is Windows</li></ul><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><p>string</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toValidFilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Windows</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">System32</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;C:\\Windows\\System32&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toValidFilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;home/user/.bashrc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;/home/user/.bashrc&#39;</span></span></code></pre></div>`,7))])}const f=r(p,[["render",c]]);export{C as __pageData,f as default};
